//sqlite
//app > AndroidManifest.xml
<uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
  
//app > res > layout > activity_main.xml
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout
	xmlns:android="http://schemas.android.com/apk/res/android"
	xmlns:app="http://schemas.android.com/apk/res-auto"
	xmlns:tools="http://schemas.android.com/tools"
	android:layout_width="match_parent"
	android:layout_height="match_parent"
	android:orientation="vertical"
	tools:context=".MainActivity">

	<!-- Edit text to enter name -->
	<EditText
		android:id="@+id/enterName"
		android:layout_width="match_parent"
		android:layout_height="wrap_content"
		android:hint="Enter Name"
		android:textSize="22sp"
		android:layout_margin="20sp"/>

	<!-- Edit text to enter age -->
	<EditText
		android:id="@+id/enterAge"
		android:layout_width="match_parent"
		android:layout_height="wrap_content"
		android:layout_margin="20sp"
		android:textSize="22sp"
		android:hint="Enter Age"/>

	<!-- Button to add Name -->
	<Button
		android:id="@+id/addName"
		android:layout_width="150sp"
		android:layout_gravity="center"
		android:background="@color/colorPrimary"
		android:text="Add Name"
		android:textColor="#ffffff"
		android:textSize="20sp"
		android:layout_height="wrap_content"
		android:layout_marginTop="20sp"/>

	<!-- Button to print Name -->
	<Button
		android:id="@+id/printName"
		android:layout_width="150sp"
		android:layout_gravity="center"
		android:background="@color/colorPrimary"
		android:text="Print Name"
		android:textColor="#ffffff"
		android:textSize="20sp"
		android:layout_height="wrap_content"
		android:layout_marginTop="20sp"/>

	<LinearLayout
		android:layout_width="match_parent"
		android:layout_height="wrap_content">

		<!-- Text view to get all name -->
		<TextView
			android:id="@+id/Name"
			android:textAlignment="center"
			android:layout_weight="1"
			android:layout_width="match_parent"
			android:layout_height="wrap_content"
			android:layout_margin="20sp"
			android:text="Name\n\n"
			android:textSize="22sp"
			android:padding="10sp"
			android:textColor="#000000"/>

		<!-- Text view to get all ages -->
		<TextView
			android:layout_weight="1"
			android:id="@+id/Age"
			android:textAlignment="center"
			android:layout_width="match_parent"
			android:layout_height="wrap_content"
			android:layout_margin="20sp"
			android:text="Age\n\n"
			android:textSize="22sp"
			android:padding="10sp"
			android:textColor="#000000"/>

	</LinearLayout>

</LinearLayout>

//app > java > your projectâ€™s package name > Right-click on it > New > Kotlin class and name it as DBHelper
package com.release.gfg1

import android.content.ContentValues
import android.content.Context
import android.database.Cursor
import android.database.sqlite.SQLiteDatabase
import android.database.sqlite.SQLiteOpenHelper

class DBHelper(context: Context, factory: SQLiteDatabase.CursorFactory?) :
	SQLiteOpenHelper(context, DATABASE_NAME, factory, DATABASE_VERSION) {

	// below is the method for creating a database by a sqlite query
	override fun onCreate(db: SQLiteDatabase) {
		// below is a sqlite query, where column names
		// along with their data types is given
		val query = ("CREATE TABLE " + TABLE_NAME + " ("
				+ ID_COL + " INTEGER PRIMARY KEY, " +
				NAME_COl + " TEXT," +
				AGE_COL + " TEXT" + ")")

		// we are calling sqlite 
		// method for executing our query
		db.execSQL(query)
	}

	override fun onUpgrade(db: SQLiteDatabase, p1: Int, p2: Int) {
		// this method is to check if table already exists
		db.execSQL("DROP TABLE IF EXISTS " + TABLE_NAME)
		onCreate(db)
	}

	// This method is for adding data in our database
	fun addName(name : String, age : String ){

		// below we are creating
		// a content values variable
		val values = ContentValues()

		// we are inserting our values
		// in the form of key-value pair
		values.put(NAME_COl, name)
		values.put(AGE_COL, age)

		// here we are creating a 
		// writable variable of
		// our database as we want to
		// insert value in our database
		val db = this.writableDatabase

		// all values are inserted into database
		db.insert(TABLE_NAME, null, values)

		// at last we are 
		// closing our database
		db.close()
	}

	// below method is to get
	// all data from our database
	fun getName(): Cursor? {

		// here we are creating a readable
		// variable of our database
		// as we want to read value from it
		val db = this.readableDatabase

		// below code returns a cursor to 
		// read data from the database
		return db.rawQuery("SELECT * FROM " + TABLE_NAME, null)

	}

	companion object{
		// here we have defined variables for our database

		// below is variable for database name
		private val DATABASE_NAME = "GEEKS_FOR_GEEKS"

		// below is the variable for database version
		private val DATABASE_VERSION = 1

		// below is the variable for table name
		val TABLE_NAME = "gfg_table"

		// below is the variable for id column
		val ID_COL = "id"

		// below is the variable for name column
		val NAME_COl = "name"

		// below is the variable for age column
		val AGE_COL = "age"
	}
}

//MainActivity.kt
package com.release.gfg1

import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.widget.Toast
import kotlinx.android.synthetic.main.activity_main.*

class MainActivity : AppCompatActivity() {

	override fun onCreate(savedInstanceState: Bundle?) {
		super.onCreate(savedInstanceState)
		setContentView(R.layout.activity_main)

		// below code is to add on click 
		// listener to our add name button
		addName.setOnClickListener{

			// below we have created
			// a new DBHelper class,
			// and passed context to it
			val db = DBHelper(this, null)

			// creating variables for values 
			// in name and age edit texts
			val name = enterName.text.toString()
			val age = enterAge.text.toString()

			// calling method to add
			// name to our database
			db.addName(name, age)

			// Toast to message on the screen
			Toast.makeText(this, name + " added to database", Toast.LENGTH_LONG).show()

			// at last, clearing edit texts
			enterName.text.clear()
			enterAge.text.clear()
		}

		// below code is to add on click
		// listener to our print name button
		printName.setOnClickListener{

			// creating a DBHelper class 
			// and passing context to it
			val db = DBHelper(this, null)

			// below is the variable for cursor
			// we have called method to get
			// all names from our database
			// and add to name text view
			val cursor = db.getName()

			// moving the cursor to first position and 
			// appending value in the text view
			cursor!!.moveToFirst()
			Name.append(cursor.getString(cursor.getColumnIndex(DBHelper.NAME_COl)) + "\n")
			Age.append(cursor.getString(cursor.getColumnIndex(DBHelper.AGE_COL)) + "\n")

			// moving our cursor to next 
			// position and appending values
			while(cursor.moveToNext()){
				Name.append(cursor.getString(cursor.getColumnIndex(DBHelper.NAME_COl)) + "\n")
				Age.append(cursor.getString(cursor.getColumnIndex(DBHelper.AGE_COL)) + "\n")
			}

			// at last we close our cursor
			cursor.close()
		}
	}
}
------------------------------------
//shared preference
//activity_main.xml
<?xml version="1.0" encoding="utf-8"?> 
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
	xmlns:tools="http://schemas.android.com/tools"
	android:layout_width="match_parent"
	android:layout_height="match_parent"
	tools:context=".MainActivity"
	tools:ignore="HardcodedText"> 

	<TextView
		android:id="@+id/textview"
		android:layout_width="wrap_content"
		android:layout_height="wrap_content"
		android:layout_centerHorizontal="true"
		android:layout_marginTop="32dp"
		android:text="Shared Preferences Demo"
		android:textColor="@android:color/black"
		android:textSize="24sp" /> 

	<!--EditText to take the data from the user and save the data in SharedPreferences-->
	<EditText
		android:id="@+id/edit1"
		android:layout_width="match_parent"
		android:layout_height="wrap_content"
		android:layout_below="@+id/textview"
		android:layout_marginStart="16dp"
		android:layout_marginTop="8dp"
		android:layout_marginEnd="16dp"
		android:hint="Enter your Name"
		android:padding="10dp" /> 

	<!--EditText to take the data from the user and save the data in SharedPreferences-->
	<EditText
		android:id="@+id/edit2"
		android:layout_width="match_parent"
		android:layout_height="wrap_content"
		android:layout_below="@+id/edit1"
		android:layout_marginStart="16dp"
		android:layout_marginTop="8dp"
		android:layout_marginEnd="16dp"
		android:hint="Enter your Age"
		android:inputType="number"
		android:padding="10dp" /> 
</RelativeLayout>

//MainActivity
import android.os.Bundle 
import android.widget.EditText 
import androidx.appcompat.app.AppCompatActivity 

class MainActivity : AppCompatActivity() { 
	private lateinit var name: EditText 
	private lateinit var age: EditText 
	
	override fun onCreate(savedInstanceState: Bundle?) { 
		super.onCreate(savedInstanceState) 
		setContentView(R.layout.activity_main) 
		name = findViewById(R.id.edit1) 
		age = findViewById(R.id.edit2) 
	} 

	// Fetch the stored data in onResume() Because this is what will be called when the app opens again 
	override fun onResume() { 
		super.onResume() 
		// Fetching the stored data from the SharedPreference 
		val sh = getSharedPreferences("MySharedPref", MODE_PRIVATE) 
		val s1 = sh.getString("name", "") 
		val a = sh.getInt("age", 0) 

		// Setting the fetched data in the EditTexts 
		name.setText(s1) 
		age.setText(a.toString()) 
	} 

	// Store the data in the SharedPreference in the onPause() method 
	// When the user closes the application onPause() will be called and data will be stored 
	override fun onPause() { 
		super.onPause() 
		// Creating a shared pref object with a file name "MySharedPref" in private mode 
		val sharedPreferences = getSharedPreferences("MySharedPref", MODE_PRIVATE) 
		val myEdit = sharedPreferences.edit() 

		// write all the data entered by the user in SharedPreference and apply 
		myEdit.putString("name", name.text.toString()) 
		myEdit.putInt("age", age.text.toString().toInt()) 
		myEdit.apply() 
	} 
}
-----------------------
//progress bar
//activity_main.xml
<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout
	xmlns:android="http://schemas.android.com/apk/res/android"
	xmlns:app="http://schemas.android.com/apk/res-auto"
	xmlns:tools="http://schemas.android.com/tools"
	android:layout_width="match_parent"
	android:layout_height="match_parent"
	tools:context=".MainActivity">

	<!-- adding progress bar -->
	<ProgressBar
		android:id="@+id/progress_Bar"
		style="?android:attr/progressBarStyle"
		android:layout_width="200dp"
		android:layout_height="wrap_content"
		android:layout_marginLeft="70dp"
		android:layout_marginTop="150dp"
		android:indeterminate = "true"
		android:max="100"
		android:minWidth="200dp"
		android:minHeight="50dp"
		android:visibility="invisible"
		android:layout_centerInParent="true"
		android:progress="0"
		android:layout_marginStart="70dp" />

	<!-- adding textview which will show the progress -->
	<TextView
		android:id="@+id/text_view"
		android:layout_width="wrap_content"
		android:layout_height="wrap_content"
		android:layout_below="@+id/progress_Bar"
		android:layout_centerHorizontal="true" />

	<!-- adding button to start the progress -->
	<Button
		android:id="@+id/show_button"
		android:layout_width="191dp"
		android:layout_height="wrap_content"
		android:layout_below="@+id/text_view"
		android:layout_marginLeft="70dp"
		android:layout_marginTop="20dp"
		android:text="Progress Bar"
		android:layout_centerHorizontal="true"
		android:layout_marginStart="70dp" />

</RelativeLayout>

//MainActivity.kt
import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.widget.Button
import android.widget.ProgressBar
import android.widget.TextView
import android.os.Handler

class MainActivity : AppCompatActivity() {

	private var progressBar: ProgressBar? = null
	private var i = 0
	private var txtView: TextView? = null
	private val handler = Handler()
	
	override fun onCreate(savedInstanceState: Bundle?) {
		super.onCreate(savedInstanceState)
		setContentView(R.layout.activity_main)
		
		// finding progressbar by its id
		progressBar = findViewById<ProgressBar>(R.id.progress_Bar) as ProgressBar
	
		// finding textview by its id
		txtView = findViewById<TextView>(R.id.text_view)
		
		// finding button by its id
		val btn = findViewById<Button>(R.id.show_button)
		
		// handling click on button 
		btn.setOnClickListener {
			// Before clicking the button the progress bar will invisible
			// so we have to change the visibility of the progress bar to visible
			// setting the progressbar visibility to visible
			progressBar.visibility = View.VISIBLE
			
			i = progressBar.progress
			
			Thread(Runnable {
				// this loop will run until the value of i becomes 99
				while (i < 100) {
					i += 1
					// Update the progress bar and display the current value
					handler.post(Runnable {
						progressBar.progress = i					 
						// setting current progress to the textview
						txtView!!.text = i.toString() + "/" + progressBar.max
					})
					try {
						Thread.sleep(100)
					} catch (e: InterruptedException) {
						e.printStackTrace()
					}
				}
				
				// setting the visibility of the progressbar to invisible
				// or you can use View.GONE instead of invisible
				// View.GONE will remove the progressbar 
				progressBar.visibility = View.INVISIBLE
			
			}).start()
		}
	}
}

//AndroidManifest.xml
<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
	package="com.geeksforgeeks.myfirstkotlinapp">

	<application
		android:allowBackup="true"
		android:icon="@mipmap/ic_launcher"
		android:label="@string/app_name"
		android:roundIcon="@mipmap/ic_launcher_round"
		android:supportsRtl="true"
		android:theme="@style/AppTheme">
		<activity android:name=".MainActivity">
			<intent-filter>
				<action android:name="android.intent.action.MAIN" />

				<category android:name="android.intent.category.LAUNCHER" />
			</intent-filter>
		</activity>
	</application>

</manifest>
